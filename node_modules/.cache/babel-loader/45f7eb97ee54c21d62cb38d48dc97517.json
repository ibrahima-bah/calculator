{"ast":null,"code":"var _jsxFileName = \"/Users/salaaoleg/Desktop/Calculator/calculator9000/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./src/App.js\";\nimport { useState, useEffect } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [preState, setPreState] = useState(\"\");\n  const [curState, setCurState] = useState(\"\");\n  const [input, setInput] = useState(\"0\");\n  const [operator, setOperator] = useState(null);\n  const [total, setTotal] = useState(false);\n\n  const inputNum = e => {\n    if (curState.includes(\".\") && e.target.innerText === \".\") return;\n\n    if (total) {\n      setPreState(\"\");\n    }\n\n    curState ? setCurState(pre => pre + e.target.innerText) : setCurState(e.target.innerText);\n    setTotal(false);\n  };\n\n  useEffect(() => {\n    setInput(curState);\n  }, [curState]);\n  useEffect(() => {\n    setInput(\"0\");\n  }, []);\n\n  const operatorType = e => {\n    setTotal(false);\n    setOperator(e.target.innerText);\n    if (curState === \"\") return;\n\n    if (preState !== \"\") {\n      equals();\n    } else {\n      setPreState(curState);\n      setCurState(\"\");\n    }\n  };\n\n  const equals = e => {\n    if ((e === null || e === void 0 ? void 0 : e.target.innerText) === \"=\") {\n      setTotal(true);\n    }\n\n    let cal;\n\n    switch (operator) {\n      case \"/\":\n        cal = String(parseFloat(preState) / parseFloat(curState));\n        break;\n\n      case \"+\":\n        cal = String(parseFloat(preState) + parseFloat(curState));\n        break;\n\n      case \"X\":\n        cal = String(parseFloat(preState) * parseFloat(curState));\n        break;\n\n      case \"-\":\n        cal = String(parseFloat(preState) - parseFloat(curState));\n        break;\n\n      default:\n        return;\n    }\n\n    setInput(\"\");\n    setPreState(cal);\n    setCurState(\"\");\n  };\n\n  const minusPlus = () => {\n    if (curState.charAt(0) === \"-\") {\n      setCurState(curState.substring(1));\n    } else {\n      setCurState(\"-\" + curState);\n    }\n  };\n\n  const percent = () => {\n    preState ? setCurState(String(parseFloat(curState) / 100 * preState)) : setCurState(String(parseFloat(curState) / 100));\n  };\n\n  const reset = () => {\n    setPreState(\"\");\n    setCurState(\"\");\n    setInput(\"0\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen\",\n        children: input !== \"\" || input === \"0\" ? /*#__PURE__*/_jsxDEV(NumberFormat, {\n          value: input,\n          displayType: \"text\",\n          thousandSeparator: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(NumberFormat, {\n          value: preState,\n          displayType: \"text\",\n          thousandSeparator: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn light-gray\",\n        onClick: reset,\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn light-gray\",\n        onClick: percent,\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn light-gray\",\n        onClick: minusPlus,\n        children: \"+/-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn orange\",\n        onClick: operatorType,\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn orange\",\n        onClick: operatorType,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn orange\",\n        onClick: operatorType,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn orange\",\n        onClick: operatorType,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn zero\",\n        onClick: inputNum,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: inputNum,\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        onClick: equals,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"gOf2rW4WOaEPuNkEcSO0k9R+Dw0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/salaaoleg/Desktop/Calculator/calculator9000/src/App.js"],"names":["useState","useEffect","NumberFormat","App","preState","setPreState","curState","setCurState","input","setInput","operator","setOperator","total","setTotal","inputNum","e","includes","target","innerText","pre","operatorType","equals","cal","String","parseFloat","minusPlus","charAt","substring","percent","reset"],"mappings":"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","sourcesContent":["import \"./src/App.js\";\nimport { useState, useEffect } from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nfunction App() {\n  const [preState, setPreState] = useState(\"\");\n  const [curState, setCurState] = useState(\"\");\n  const [input, setInput] = useState(\"0\");\n  const [operator, setOperator] = useState(null);\n  const [total, setTotal] = useState(false);\n\n  const inputNum = (e) => {\n    if (curState.includes(\".\") && e.target.innerText === \".\") return;\n\n    if (total) {\n      setPreState(\"\");\n    }\n\n    curState\n        ? setCurState((pre) => pre + e.target.innerText)\n        : setCurState(e.target.innerText);\n    setTotal(false);\n  };\n\n  useEffect(() => {\n    setInput(curState);\n  }, [curState]);\n\n  useEffect(() => {\n    setInput(\"0\");\n  }, []);\n  const operatorType = (e) => {\n    setTotal(false);\n    setOperator(e.target.innerText);\n    if (curState === \"\") return;\n    if (preState !== \"\") {\n      equals();\n    } else {\n      setPreState(curState);\n      setCurState(\"\");\n    }\n  };\n\n  const equals = (e) => {\n    if (e?.target.innerText === \"=\") {\n      setTotal(true);\n    }\n    let cal;\n    switch (operator) {\n      case \"/\":\n        cal = String(parseFloat(preState) / parseFloat(curState));\n        break;\n\n      case \"+\":\n        cal = String(parseFloat(preState) + parseFloat(curState));\n        break;\n      case \"X\":\n        cal = String(parseFloat(preState) * parseFloat(curState));\n        break;\n      case \"-\":\n        cal = String(parseFloat(preState) - parseFloat(curState));\n        break;\n      default:\n        return;\n    }\n    setInput(\"\");\n    setPreState(cal);\n    setCurState(\"\");\n  };\n\n  const minusPlus = () => {\n    if (curState.charAt(0) === \"-\") {\n      setCurState(curState.substring(1));\n    } else {\n      setCurState(\"-\" + curState);\n    }\n  };\n\n  const percent = () => {\n    preState\n        ? setCurState(String((parseFloat(curState) / 100) * preState))\n        : setCurState(String(parseFloat(curState) / 100));\n  };\n\n  const reset = () => {\n    setPreState(\"\");\n    setCurState(\"\");\n    setInput(\"0\");\n  };\n  return (\n      <div className='container'>\n        <div className='wrapper'>\n          <div className='screen'>\n            {input !== \"\" || input === \"0\" ? (\n                <NumberFormat\n                    value={input}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                />\n            ) : (\n                <NumberFormat\n                    value={preState}\n                    displayType={\"text\"}\n                    thousandSeparator={true}\n                />\n            )}\n          </div>\n          <div className='btn light-gray' onClick={reset}>\n            AC\n          </div>\n          <div className='btn light-gray' onClick={percent}>\n            %\n          </div>\n          <div className='btn light-gray' onClick={minusPlus}>\n            +/-\n          </div>\n          <div className='btn orange' onClick={operatorType}>\n            /\n          </div>\n          <div className='btn' onClick={inputNum}>\n            7\n          </div>\n          <div className='btn' onClick={inputNum}>\n            8\n          </div>\n          <div className='btn' onClick={inputNum}>\n            9\n          </div>\n          <div className='btn orange' onClick={operatorType}>\n            X\n          </div>\n          <div className='btn' onClick={inputNum}>\n            4\n          </div>\n          <div className='btn' onClick={inputNum}>\n            5\n          </div>\n          <div className='btn' onClick={inputNum}>\n            6\n          </div>\n          <div className='btn orange' onClick={operatorType}>\n            +\n          </div>\n          <div className='btn' onClick={inputNum}>\n            1\n          </div>\n          <div className='btn' onClick={inputNum}>\n            2\n          </div>\n          <div className='btn' onClick={inputNum}>\n            3\n          </div>\n          <div className='btn orange' onClick={operatorType}>\n            -\n          </div>\n          <div className='btn zero' onClick={inputNum}>\n            0\n          </div>\n          <div className='btn' onClick={inputNum}>\n            .\n          </div>\n          <div className='btn' onClick={equals}>\n            =\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}